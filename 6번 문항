#include <iostream>
#include <opencv2/opencv.hpp>

int main() {
    // 1. 비디오 파일 열기
    cv::VideoCapture cap("sample_video.mp4");  // 여기에 영상 파일 경로를 넣기

    if (!cap.isOpened()) {
        std::cerr << "Error: Cannot open video file." << std::endl;
        return -1;
    }
    std::cout << "Video opened successfully.\n";

    // 2. 프레임 읽어서 출력하기
    cv::Mat frame;
    while (true) {
        bool ret = cap.read(frame);  // 다음 프레임 읽기
        if (!ret) {
            std::cout << "End of video.\n";
            break;
        }

        cv::imshow("Video Playback", frame);  // 화면에 출력

        // 3. 25ms 대기, 'q' 키 누르면 종료
        if (cv::waitKey(25) == 'q') {
            std::cout << "Playback interrupted by user.\n";
            break;
        }
    }

    // 4. 리소스 해제
    cap.release();
    cv::destroyAllWindows();

    return 0;
}


OpenCV(Open Source Computer Vision Library)는 실시간 컴퓨터 비전 애플리케이션을 위한 오픈 소스 라이브러리입니다. 원래 Intel에서 개발되었으며, 현재는 OpenCV Foundation에서 관리하고 있습니다.

OpenCV의 주요 기능:

이미지 및 비디오 처리: 이미지 읽기, 쓰기, 변환, 필터링, 색상 공간 변환 등 다양한 이미지 및 비디오 처리 기능을 제공합니다.
객체 감지: 이미지나 비디오에서 특정 객체(얼굴, 사물 등)를 감지하고 인식하는 기능을 제공합니다.
특징점 검출 및 매칭: 이미지에서 특징점을 추출하고, 여러 이미지 간의 특징점을 매칭하여 객체 인식, 이미지 스티칭 등에 활용할 수 있습니다.
기계 학습: 기본적인 기계 학습 알고리즘을 제공하여 이미지 분류, 객체 인식 등에 활용할 수 있습니다.
3차원 재구성: 스테레오 카메라를 사용하여 3차원 모델을 생성하거나, 2차원 이미지에서 3차원 정보를 추출하는 기능을 제공합니다.
OpenCV의 활용 분야:

자율 주행: 차량의 주변 환경을 인식하고 판단하는 데 사용됩니다.
로봇 공학: 로봇이 주변 환경을 인식하고 작업을 수행하는 데 사용됩니다.
보안 및 감시: CCTV 영상 분석, 침입 감지 등에 사용됩니다.
의료 영상 분석: 의료 영상 분석을 통해 질병을 진단하거나 치료 계획을 수립하는 데 사용됩니다.
인간-컴퓨터 상호 작용 (HCI): 제스처 인식, 얼굴 인식 등을 통해 사용자와 컴퓨터 간의 상호 작용을 개선하는 데 사용됩니다.
OpenCV의 장점:

오픈 소스: 무료로 사용할 수 있으며, 필요에 따라 코드를 수정하고 확장할 수 있습니다.
다양한 플랫폼 지원: Windows, Linux, macOS, Android, iOS 등 다양한 운영체제 및 플랫폼을 지원합니다.
다양한 프로그래밍 언어 지원: C++, Python, Java 등 다양한 프로그래밍 언어를 지원합니다.
활발한 커뮤니티: 전 세계적으로 많은 사용자와 개발자 커뮤니티가 있어, 정보를 공유하고 문제를 해결하는 데 도움을 받을 수 있습니다.
실시간 처리: 실시간 비전 애플리케이션 개발에 적합하도록 최적화되어 있습니다.
OpenCV는 컴퓨터 비전 분야에서 매우 강력하고 널리 사용되는 라이브러리이며, 다양한 분야에서 혁신적인 애플리케이션 개발에 기여하고 있습니다.

더 궁금한 점이 있으시면 언제든지 질문해주세요.
