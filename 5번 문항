#include <iostream>
#include <sqlite3.h>

int main() {
    sqlite3 *db;
    char* errMsg = nullptr;

    // 1. 데이터베이스 열기 (없으면 생성)
    int rc = sqlite3_open("user.db", &db);
    if (rc) {
        std::cerr << "Can't open database: " << sqlite3_errmsg(db) << std::endl;
        return 1;
    }
    std::cout << "Opened database successfully.\n";

    // 2. 테이블 생성
    const char* createTableSQL =
        "CREATE TABLE IF NOT EXISTS Users ("
        "ID INTEGER PRIMARY KEY, "
        "Name TEXT NOT NULL, "
        "Age INTEGER NOT NULL);";

    rc = sqlite3_exec(db, createTableSQL, nullptr, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL error (create table): " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }
    else {
        std::cout << "Table created successfully.\n";
    }

    // 3. 데이터 삽입
    const char* insertSQL =
        "INSERT INTO Users (ID, Name, Age) VALUES (1, 'Alice', 25);"
        "INSERT INTO Users (ID, Name, Age) VALUES (2, 'Bob', 30);"
        "INSERT INTO Users (ID, Name, Age) VALUES (3, 'Charlie', 22);"
        "INSERT INTO Users (ID, Name, Age) VALUES (4, 'Diana', 28);"
        "INSERT INTO Users (ID, Name, Age) VALUES (5, 'Eve', 26);";

    rc = sqlite3_exec(db, insertSQL, nullptr, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL error (insert data): " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }
    else {
        std::cout << "Records inserted successfully.\n";
    }

    // 4. 데이터 조회
    const char* selectSQL = "SELECT ID, Name, Age FROM Users;";

    auto callback = [](void* NotUsed, int argc, char** argv, char** azColName) -> int {
        for (int i = 0; i < argc; i++) {
            std::cout << azColName[i] << ": " << (argv[i] ? argv[i] : "NULL") << " | ";
        }
        std::cout << std::endl;
        return 0;
    };

    rc = sqlite3_exec(db, selectSQL, callback, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL error (select data): " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }

    // 5. 데이터베이스 닫기
    sqlite3_close(db);
    std::cout << "Database closed.\n";

    return 0;
}
